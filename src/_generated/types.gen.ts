// This file is auto-generated by @hey-api/openapi-ts

export type models_Account = {
    /**
     * Should sales be shown in basta bid client (Basta pages).
     */
    basta_bid_client?: boolean;
    /**
     * Creation date and time for the account
     */
    created?: (timestamppb_Timestamp);
    /**
     * Email associated with account
     */
    email?: string;
    /**
     * Identifier for the account and used as a public identifier for pages
     */
    handle?: string;
    /**
     * Unique ID for the account
     */
    id?: string;
    /**
     * Modified date and time for the account. Default nil
     */
    modified?: (timestamppb_Timestamp);
    /**
     * Display name for account
     */
    name?: string;
    /**
     * Populated if account has accepted seller terms.
     */
    terms?: (models_SellerTerms);
};

export type models_AccountResponse = {
    account?: models_Account;
};

export type models_BidIncrementTable = {
    rules?: Array<models_RangeRule>;
};

export type models_ClosingMethod = 0 | 1 | 2 | 3;

export type models_CreateSaleResponse = {
    sale?: models_Sale;
};

export type models_Currency = 0 | 1 | 2;

export type models_GetSaleResponse = {
    sale?: models_Sale;
};

export type models_Paddle = {
    created?: timestamppb_Timestamp;
    identifier?: string;
    type?: models_PaddleType;
    user_id?: string;
};

export type models_PaddleType = 0 | 1 | 2;

export type models_RangeRule = {
    high_range?: number;
    low_range?: number;
    step?: number;
};

export type models_ReserveAutoBidMethod = 0 | 1;

export type models_Sale = {
    account_id?: string;
    /**
     * Should the auction be shown on the Basta bid client (Basta pages).
     */
    basta_bid_client?: boolean;
    bid_increment_table?: models_BidIncrementTable;
    closing_method?: models_ClosingMethod;
    /**
     * Closing time countdown (Sniping period) in millisecods
     */
    closing_time_countdown?: number;
    /**
     * Created timestamp
     */
    created_timestamp?: (timestamppb_Timestamp);
    currency?: models_Currency;
    hidden?: boolean;
    id?: string;
    item_ids?: Array<(string)>;
    paddles?: Array<models_Paddle>;
    reserve_auto_bid_method?: models_ReserveAutoBidMethod;
    sale_dates?: models_SaleDates;
    sale_type?: models_SaleType;
    status?: models_SaleStatus;
};

export type models_SaleDates = {
    closing_date?: timestamppb_Timestamp;
    live_date?: timestamppb_Timestamp;
    open_date?: timestamppb_Timestamp;
};

export type models_SaleStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;

export type models_SaleType = 0 | 1;

export type models_SellerTerms = {
    /**
     * Identifier of the user who has accepted the seller terms.
     */
    accepted_by?: string;
    /**
     * Unix timestamp of when seller terms were accepted for the account. DateTime String RFC3999
     */
    accepted_date?: (timestamppb_Timestamp);
};

export type models_UpdateSaleResponse = {
    sale?: models_Sale;
};

export type timestamppb_Timestamp = {
    /**
     * Non-negative fractions of a second at nanosecond resolution. Negative
     * second values with fractions must still have non-negative nanos values
     * that count forward in time. Must be from 0 to 999,999,999
     * inclusive.
     */
    nanos?: number;
    /**
     * Represents seconds of UTC time since Unix epoch
     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     * 9999-12-31T23:59:59Z inclusive.
     */
    seconds?: number;
};

export type PostAccountsResponse = (models_AccountResponse);

export type PostAccountsError = (unknown);

export type GetAccountsByAccountIdData = {
    path: {
        /**
         * Your provided Basta account id.
         */
        accountId: string;
    };
};

export type GetAccountsByAccountIdResponse = (unknown);

export type GetAccountsByAccountIdError = (unknown);

export type GetSalesResponse = (Array<models_GetSaleResponse>);

export type GetSalesError = (unknown);

export type PostSalesResponse = (models_CreateSaleResponse);

export type PostSalesError = (unknown);

export type GetSalesBySaleIdData = {
    path: {
        /**
         * Your provided Basta sale id.
         */
        saleId: string;
    };
};

export type GetSalesBySaleIdResponse = (models_GetSaleResponse);

export type GetSalesBySaleIdError = (unknown);

export type PutSalesBySaleIdData = {
    path: {
        /**
         * Your provided Basta sale id.
         */
        saleId: string;
    };
};

export type PutSalesBySaleIdResponse = (models_UpdateSaleResponse);

export type PutSalesBySaleIdError = (unknown);